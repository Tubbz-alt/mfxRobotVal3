<?xml version="1.0" encoding="utf-8"?>
<Programs xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.staubli.com/robotics/VAL3/Program/2">
  <Program name="checkCylinder" access="public">
    <Parameters xmlns="http://www.staubli.com/robotics/VAL3/Param/1">
      <Parameter name="x_tTool" type="tool" xsi:type="element" />
      <Parameter name="x_nCylinder" type="num" xsi:type="element" />
      <Parameter name="x_bCheckCylind" type="bool" xsi:type="array" use="reference" />
      <Parameter name="x_bError" type="bool" xsi:type="array" use="reference" />
    </Parameters>
    <Locals>
      <Local name="l_pPointHere" type="point" xsi:type="array" size="1" />
      <Local name="l_pNewOrigin" type="point" xsi:type="array" size="1" />
    </Locals>
    <Code><![CDATA[begin
  //Header begin
  //Description of program
  //  This program checks if the tool is inside the specified cylindrical zone
  //
  //Input parameters 
  //  point x_tTool : 
  //    role : defines the tool that you want to monitor the position of
  //  num x_nCylinder :
  //    role : number of the cylindrical zone to be monitored (in order of creation)
  //    possible values :  number of an existing cylindrical zone
  //
  //Output parameters
  //  num x_bCheckCylind :
  //    role : set to true if the tool is inside the cylindrical zone and false otherwise
  //  bool x_bError :
  //    role : set to true if the cylindrical zone does not exist and false otherwise
  //
  //Example 
  //  call checkCylinder(flange,5,bOK,bErr) 
  //  
  //History
  //  Creation : 16-04-08 - f.Rob
  //  updated for SLAC KN
  //Header end
  
  //Test if the cylinder that you want to monitor is created
  call init()
  //DEBUG:putln("pgm MON: checkCylinder()")
  if x_nCylinder>nNumberCylinder
    x_bError=true
    stopMove()
    disablePower()
    //User interface
    popUpMsg("Cylinder Zone #"+toString("",x_nCylinder)+" has not been created."+chr(10)+"Stop the program !!!")
    delay(3)
    return
  endIf
  x_bError=false
  x_bCheckCylind=false
  if bCreateCylinder[x_nCylinder]
    //here() returns the current position of x_tTool tool in fCylinder frame.
    l_pPointHere=here(x_tTool,fCylinder[x_nCylinder])
    //Check if inside
    if l_pPointHere.trsf.z>=0 and l_pPointHere.trsf.z<=nDistZCylinder[x_nCylinder]
      //Inside the cylinder
      l_pNewOrigin=compose(pOriginCylinder[x_nCylinder],world,{0,0,l_pPointHere.trsf.z,0,0,0})
      //Test if the tool is inside the cylinder
      if distance(l_pNewOrigin,l_pPointHere)<=nRadiusCylinder[x_nCylinder]
        x_bCheckCylind=true
      endIf
    endIf
  endIf
end
]]></Code>
  </Program>
</Programs>