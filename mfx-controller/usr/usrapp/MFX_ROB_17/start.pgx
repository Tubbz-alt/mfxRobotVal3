<?xml version="1.0" encoding="utf-8" ?>
<Programs xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.staubli.com/robotics/VAL3/Program/2" >
  <Program name="start" access="private" >
    <Locals>
      <Local name="jNew" type="joint" xsi:type="array" size="1" />
      <Local name="l_mMdesc" type="mdesc" xsi:type="array" size="1" />
      <Local name="l_pAxisOx" type="point" xsi:type="array" size="1" />
      <Local name="l_pOrigin" type="point" xsi:type="array" size="1" />
      <Local name="l_pPlaneOxy" type="point" xsi:type="array" size="1" />
      <Local name="nKey" type="num" xsi:type="array" size="1" />
    </Locals>
    <Code><![CDATA[begin
  //-----------------------------------------------------------------------
  //Header begin
  //Description of program
  //
  //
  //History
  //  Initial Release KN
  //Header end
  //-----------------------------------------------------------------------
  // Global variables :
  //
  //---------------------
  //start description
  //---------------------


  //  l_pOrigin = {{-1.15694092, -7.99769233,  1599.75028 , 0 ,0 ,0}, {sfree,efree,wfree}}
  //  l_pAxisOx = {{38.8422826, -8.22467660,  1599.85322 , 0 ,0 ,0}, {sfree,efree,wfree}}
  //  l_pPlaneOxy = {{38.9449094, -8.28100326,  1559.85339 , 0 ,0 ,0}, {sfree,efree,wfree}}
  //  link(l_pOrigin,world)
  //  link(l_pAxisOx,world)
  //  link(l_pPlaneOxy,world)

  //  setFrame(l_pOrigin,l_pAxisOx,l_pPlaneOxy,fCalculatedFram)

  //  logMsg("x  "+toString(".6",fCalculatedFram.trsf.x))
  //  logMsg("y  "+toString(".6",fCalculatedFram.trsf.y))
  //  logMsg("z  "+toString(".6",fCalculatedFram.trsf.z))
  //  logMsg("rx "+toString(".6",fCalculatedFram.trsf.rx))
  //  logMsg("ry "+toString(".6",fCalculatedFram.trsf.ry))
  //  logMsg("rz" +toString(".6",fCalculatedFram.trsf.rz))

  if (false)

    if (pointToJoint(tSensorTool,jPark,teste[1],jNew))
      logMsg("bom")
    else
      logMsg("mau")
    endIf

    // movel(pIP1Point[nIP1Number],tSensorTool,mGlobalSpeed)
    //movel(pIP1Point[nIP1Number],tSensorTool,mGlobalSpeed)



    enablePower()

    do
      nKey=getKey()
      switch nKey
        // ESC key aborts & returns immediately
        case 271
          stopMove()
          resetMotion()
          movej(jPark,tSensorTool,mDefault)


        break
        case 272



          stopMove()
          resetMotion()
          movel(pIP1Point[0],tSensorTool,mDefault)

        break
        case 273


          stopMove()
          resetMotion()
          movel(pIP1Point[1],tSensorTool,mDefault)

          logMsg("x  "+toString(".6",teste[1].trsf.x))
          logMsg("y  "+toString(".6",teste[1].trsf.y))
          logMsg("z  "+toString(".6",teste[1].trsf.z))
          logMsg("rx "+toString(".6",teste[1].trsf.rx))
          logMsg("ry "+toString(".6",teste[1].trsf.ry))
          logMsg("rz"+toString(".6",teste[1].trsf.rz))
        break
        case 274
          stopMove()
          resetMotion()
          movel(pIP1Point[2],tSensorTool,mDefault)
        break
        case 275
          stopMove()
          resetMotion()
          movel(pIP1Point[3],tSensorTool,mDefault)
        break
        case 276
          stopMove()
          resetMotion()
          movel(pIP1Point[4],tSensorTool,mDefault)
        break
        case 277
          stopMove()
          resetMotion()
          movel(pIP1Point[5],tSensorTool,mDefault)
        break

        default
          //popUpMsg("errado")
        break

      endSwitch

    until (nKey==278)

    stopMove()
    resetMotion()
    //  enablePower()



    popUpMsg("fim")

  endIf



  call main()
end]]></Code>
  </Program>
</Programs>